//==============================================================================
//  WARNING!!  This file is overwritten by the Block UI Styler while generating
//  the automation code. Any modifications to this file will be lost after
//  generating the code again.
//
//       Filename:  F:\410NEW\application\CreateSheet.cs
//
//        This file was generated by the NX Block UI Styler
//        Created by: ZWL
//              Version: NX 7.5
//              Date: 09-02-2011  (Format: mm-dd-yyyy)
//              Time: 17:40 (Format: hh-mm)
//
//==============================================================================

//==============================================================================
//==============================================================================

//------------------------------------------------------------------------------
//These imports are needed for the following template code
//------------------------------------------------------------------------------
using System;
using NXOpen;
using NXOpen.BlockStyler;
using System.Collections.Generic;
using TDPPM;

//------------------------------------------------------------------------------
//Represents Block Styler application class
//------------------------------------------------------------------------------
public struct S_SheetTemplet
{
    public string name;
    public string filepath;
    public string type; //A3  A4  其它
    public string chinese;
}

public class CreateSheet
{
    //class members
    private static Session theSession = null;
    private static UI theUI = null;
    public static CreateSheet theCreateSheet;
    private string theDialogName;
    private NXOpen.BlockStyler.BlockDialog theDialog;
    private NXOpen.BlockStyler.UIBlock group0;// Block type: Group
    private NXOpen.BlockStyler.UIBlock enum0;// Block type: Enumeration
    private NXOpen.BlockStyler.ListBox list_box0;// Block type: List Box
    private NXOpen.BlockStyler.UIBlock group1;// Block type: Group
    private NXOpen.BlockStyler.UIBlock label0;// Block type: Label
    private NXOpen.BlockStyler.ListBox list_box02;// Block type: List Box
    private NXOpen.BlockStyler.UIBlock string0;// Block type: String
    private NXOpen.BlockStyler.UIBlock group;// Block type: Group
    private NXOpen.BlockStyler.ListBox list_box01;// Block type: List Box



    public List<S_SheetTemplet> SheetTempletList = new List<S_SheetTemplet>();
    public List<S_SheetTemplet> SheetTempletListA3 = new List<S_SheetTemplet>();
    public List<S_SheetTemplet> SheetTempletListA4 = new List<S_SheetTemplet>();
    public List<S_SheetTemplet> SheetTempletListOther = new List<S_SheetTemplet>();

    string[] stringA3;
    string[] stringA4;
    string[] stringOther;
    string[] SheetNames;
    //------------------------------------------------------------------------------
    //Constructor for NX Styler class
    //------------------------------------------------------------------------------
    public CreateSheet()
    {
        try
        {
            theSession = Session.GetSession();
            theUI = UI.GetUI();
            theDialogName = "CreateSheet.dlx";
            theDialog = theUI.CreateDialog(theDialogName);
            theDialog.AddApplyHandler(new NXOpen.BlockStyler.BlockDialog.Apply(ApplyCB));
            theDialog.AddOkHandler(new NXOpen.BlockStyler.BlockDialog.Ok(ok_cb));
            theDialog.AddUpdateHandler(new NXOpen.BlockStyler.BlockDialog.Update(update_cb));
            theDialog.AddCancelHandler(new NXOpen.BlockStyler.BlockDialog.Cancel(cancel_cb));
            theDialog.AddFilterHandler(new NXOpen.BlockStyler.BlockDialog.Filter(filter_cb));
            theDialog.AddInitializeHandler(new NXOpen.BlockStyler.BlockDialog.Initialize(InitializeCB));
            theDialog.AddFocusNotifyHandler(new NXOpen.BlockStyler.BlockDialog.FocusNotify(focusNotify_cb));
            theDialog.AddKeyboardFocusNotifyHandler(new NXOpen.BlockStyler.BlockDialog.KeyboardFocusNotify(keyboardFocusNotify_cb));
            theDialog.AddDialogShownHandler(new NXOpen.BlockStyler.BlockDialog.DialogShown(dialogShown_cb));
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    public static void MainFun()
    {
        try
        {
            theCreateSheet = new CreateSheet();
            theCreateSheet.Show();
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        finally
        {
            theCreateSheet.Dispose();
        }
    }
    
    //------------------------------------------------------------------------------
    //This method shows the dialog on the screen
    //------------------------------------------------------------------------------
    public NXOpen.UIStyler.DialogResponse Show()
    {
        try
        {
            theDialog.Show();
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return 0;
    }
    
    //------------------------------------------------------------------------------
    //Method Name: Dispose
    //------------------------------------------------------------------------------
    public void Dispose()
    {
        if(theDialog != null)
        {
            theDialog.Dispose();
            theDialog = null;
        }
    }
    
    
    //------------------------------------------------------------------------------
    //Callback Name: InitializeCB
    //------------------------------------------------------------------------------
    public void InitializeCB()
    {
        try
        {
            group0 = (NXOpen.BlockStyler.UIBlock)theDialog.TopBlock.FindBlock("group0");
            enum0 = (NXOpen.BlockStyler.UIBlock)theDialog.TopBlock.FindBlock("enum0");
            list_box0 = (NXOpen.BlockStyler.ListBox)theDialog.TopBlock.FindBlock("list_box0");
            group1 = (NXOpen.BlockStyler.UIBlock)theDialog.TopBlock.FindBlock("group1");
            label0 = (NXOpen.BlockStyler.UIBlock)theDialog.TopBlock.FindBlock("label0");
            list_box02 = (NXOpen.BlockStyler.ListBox)theDialog.TopBlock.FindBlock("list_box02");
            string0 = (NXOpen.BlockStyler.UIBlock)theDialog.TopBlock.FindBlock("string0");
            group = (NXOpen.BlockStyler.UIBlock)theDialog.TopBlock.FindBlock("group");
            list_box01 = (NXOpen.BlockStyler.ListBox)theDialog.TopBlock.FindBlock("list_box01");
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
    }
    
    //------------------------------------------------------------------------------
    //Callback Name: dialogShown_cb
    //------------------------------------------------------------------------------
    public void dialogShown_cb()
    {
        try
        {
            //读取SheetTemplet.xml中的模板信息
            string xmlpath = NXFun.TDPPMPath + "SheetTemplet.xml";
            List<S_SheetTemplet> SheetTempletList = XML3DPPM.GetSheetTempletList(xmlpath);
            //分类存储
            SheetTempletListA3.Clear();
            SheetTempletListA4.Clear();
            SheetTempletListOther.Clear();
            foreach (S_SheetTemplet SheetTemplet in SheetTempletList)
            {
                if (SheetTemplet.type == "A3")
                {
                    SheetTempletListA3.Add(SheetTemplet);
                }
                else if (SheetTemplet.type == "A4")
                {
                    SheetTempletListA4.Add(SheetTemplet);
                }
                else
                {
                    SheetTempletListOther.Add(SheetTemplet); 
                }
            }
            stringA3 = new string[SheetTempletListA3.Count];
            for (int i = 0; i < SheetTempletListA3.Count; i ++ )
            {
                stringA3[i] = SheetTempletListA3[i].chinese;
            }
            stringA4 = new string[SheetTempletListA4.Count];
            for (int i = 0; i < SheetTempletListA4.Count; i++)
            {
                stringA4[i] = SheetTempletListA4[i].chinese;
            }
            stringOther = new string[SheetTempletListOther.Count];
            for (int i = 0; i < SheetTempletListOther.Count; i++)
            {
                stringOther[i] = SheetTempletListOther[i].chinese;
            }
            //设置初始显示状态
            enum0.GetProperties().SetEnumAsString("Value","A3");
            list_box0.GetProperties().SetStrings("ListItems", stringA3);

            //取得当前的图纸名称列表
            NXOpen.Drawings.DrawingSheet[] ds = theSession.Parts.Work.DrawingSheets.ToArray();
            SheetNames = new string[ds.Length];
            for (int i = 0; i < ds.Length; i++)
            {
                SheetNames[i] = ds[i].Name;
            }
            list_box02.GetProperties().SetStrings("ListItems", SheetNames);
            //设置图纸名
            string name;
            int n = 1;
            do 
            {
                name = "SHT" + n.ToString();
                n++;
            } while (NXFun.isFindInList(SheetNames,name));
            string0.GetProperties().SetString("Value", name);           
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
    }
    
    //------------------------------------------------------------------------------
    //Callback Name: ApplyCB
    //------------------------------------------------------------------------------
    public int ApplyCB()
    {
        int errorCode = 0;
        try
        {
            //得到选中的图纸
            int[] sel = list_box0.GetProperties().GetIntegerVector("SelectedItems");
            string sheetpath;
            S_SheetTemplet SheetTemplet;
            if (sel.Length == 0)
            {
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Warning, "请选择图纸！");
                return 1;
            }
            else
            {
                string type = enum0.GetProperties().GetEnumAsString("Value");
                if (type == "A3")
                {
                    SheetTemplet = SheetTempletListA3[sel[0]];
                }
                else if (type == "A4")
                {
                    SheetTemplet = SheetTempletListA4[sel[0]];
                }
                else
                {
                    SheetTemplet = SheetTempletListOther[sel[0]];
                }                
            }
            sheetpath = NXFun.TDPPMPath + SheetTemplet.filepath;
            //得到名称
            string sheetname = string0.GetProperties().GetString("Value");
            if (NXFun.isFindInList(SheetNames,sheetname))
            {
                theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Warning, "图纸名称已存在！");
                return 1;
            }
            //创建图纸页
            S_SheetAttr sheetattr;
            sheetattr.GUID = Guid.NewGuid().ToString();
            sheetattr.ISPRINT = "是";
            sheetattr.ISCHECKED = "否";
            sheetattr.REMARK = SheetTemplet.chinese;
            sheetattr.TEMPLET = SheetTemplet.name;
            NXFun.CreateSheet(sheetname, sheetpath,sheetattr);
        }
        catch (Exception ex)
        {
            errorCode = 1;
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return errorCode;
    }
    
    //------------------------------------------------------------------------------
    //Callback Name: update_cb
    //------------------------------------------------------------------------------
    public int update_cb( NXOpen.BlockStyler.UIBlock block)
    {
        try
        {
            if(block == enum0)
            {
                string type = enum0.GetProperties().GetEnumAsString("Value");
                if (type == "A3")
                {
                    list_box0.GetProperties().SetStrings("ListItems", stringA3);
                } 
                else if(type == "A4")
                {
                    list_box0.GetProperties().SetStrings("ListItems", stringA4);
                }
                else if(type == "其它")
                {
                    list_box0.GetProperties().SetStrings("ListItems", stringOther);
                }
            }
            else if(block == list_box0)
            {
            }
            else if(block == label0)
            {
            }
            else if(block == list_box02)
            {
            }
            else if(block == string0)
            {
            }
            else if(block == list_box01)
            {
            }
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return 0;
    }
    
    //------------------------------------------------------------------------------
    //Callback Name: ok_cb
    //------------------------------------------------------------------------------
    public int ok_cb()
    {
        int errorCode = 0;
        try
        {
            errorCode = ApplyCB();
        }
        catch (Exception ex)
        {
            errorCode = 1;
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return errorCode;
    }
    
    //------------------------------------------------------------------------------
    //Callback Name: cancel_cb
    //------------------------------------------------------------------------------
    public int cancel_cb()
    {
        try
        {
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return 0;
    }
    
    //------------------------------------------------------------------------------
    //Callback Name: filter_cb
    //------------------------------------------------------------------------------
    public int filter_cb(NXOpen.BlockStyler.UIBlock block, NXOpen.TaggedObject selectedObject)
    {
        return(NXOpen.UF.UFConstants.UF_UI_SEL_ACCEPT);
    }
    
    //------------------------------------------------------------------------------
    //Callback Name: focusNotify_cb
    //------------------------------------------------------------------------------
    public void focusNotify_cb(NXOpen.BlockStyler.UIBlock block, bool focus)
    {
        try
        {
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
    }
    
    //------------------------------------------------------------------------------
    //Callback Name: keyboardFocusNotify_cb
    //------------------------------------------------------------------------------
    public void keyboardFocusNotify_cb(NXOpen.BlockStyler.UIBlock block, bool focus)
    {
        try
        {
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
    }
    
}
